  Plug 'fszymanski/deoplete-emoji'
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins'  } " asynchronous completion framework
  Plug 'autozimu/LanguageClient-neovim', {
        \ 'branch': 'next',
        \ 'do': 'bash install.sh',
        \ }

" Deoplete - asynchronous completion framework for neovim/Vim8
"------------------------------------"

let g:deoplete#enable_at_startup = 1
" use tab to forward cycle
inoremap <silent><expr><tab> pumvisible() ? "\<c-n>" : "\<tab>"
" use tab to backward cycle
inoremap <silent><expr><s-tab> pumvisible() ? "\<c-p>" : "\<s-tab>"

" call deoplete#custom#option('omni_patterns', v:false)
" call deoplete#custom#option('refresh_always', v:false)
" call deoplete#custom#option('ignore_case', v:false)
if exists("deoplete#custom#option")
  call deoplete#custom#option('ignore_case', v:false)
  call deoplete#custom#option('smart_case', v:false)
endif


" LanguageClient
"------------------------------------"

let g:LanguageClient_autoStart = 1
let g:LanguageClient_serverCommands = {
      \ 'rust': ['rustup', 'run', 'stable', 'rls'],
      \ 'typescript': ['tsserver'],
      \ 'typescriptreact': ['tsserver'],
      \ 'ruby': ['solargraph', 'stdio']
      \ }
" let g:LanguageClient_loggingFile = '/tmp/LanguageClient.log'
" let g:LanguageClient_loggingLevel = 'INFO'
" let g:LanguageClient_serverStderr = '/tmp/LanguageServer.log'
" let g:LanguageClient_diagnosticsEnable=0

nnoremap <F6> :call LanguageClient_contextMenu()<CR>
" Or noremap each action separately
nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
nnoremap <silent> <F2> :call LanguageClient#textDocument_rename()<CR>
